<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.login.domain.dao.EtcDAO">
    <select id="findByHistory" parameterType="String" resultType="History">
        SELECT
            HISTORY_ID,
            USER_ID,
            USER_NAME,
            RESPONSIBILITIES_OF_OFFICE,
            DEPARTMENT,
            START_YEAR,
            BIRTHDAY,
            SEX,
            USER_NUMBER,
            TOTAL_ANNUAL,
            USE_ANNUAL,
            START_DATE,
            END_DATE,
            TIME,
            APPLICATION_YEAR,
            REASON,
            APPR_YN,
            APPR_YN2,
            REQUEST_DATE,
            HOLIDAY
        FROM
            APPLICATION_HISTORY
        WHERE
            USER_ID = #{user_id}
        ORDER BY
            HISTORY_ID DESC
    </select>

    <insert id="insertApplicationHistory" parameterType="History">
        INSERT INTO
            APPLICATION_HISTORY
        VALUES (
                (SELECT * FROM (SELECT IFNULL(MAX(HISTORY_ID)+1, 1) FROM APPLICATION_HISTORY) NEXT),
                #{user_id},
                #{user_name},
                #{responsibilities_of_office},
                #{department},
                #{start_year},
                #{birthday},
                #{sex},
                #{user_number},
                #{total_annual},
                #{use_annual},
                #{start_date},
                #{end_date},
                #{time},
                #{application_year},
                #{reason},
                #{appr_yn},
                #{appr_yn2},
                NOW()
                <if test="holiday != ''">
                    ,#{holiday}
                </if>
                <if test="holiday == ''">
                    ,null
                </if>
               )
    </insert>

    <update id="updateAnnual" parameterType="Map">
        UPDATE
            ANNUAL_STATUS
        SET
            USE_ANNUAL = #{use_annual}
        WHERE
            USER_ID = #{user_id}
    </update>

    <delete id="deleteHistory" parameterType="String">
        DELETE FROM
            APPLICATION_HISTORY
        WHERE
            HISTORY_ID = #{history_id}
    </delete>

    <update id="updateAppr" parameterType="Map">
        UPDATE
            APPLICATION_HISTORY
        SET
        <if test="type == 'manager'">
            APPR_YN = 'Y'
        </if>
        <if test="type == 'admin'">
            APPR_YN2 = 'Y'
        </if>
        WHERE
            HISTORY_ID = #{history_id}
    </update>

    <select id="calendarHistory" parameterType="Map" resultType="History">
        SELECT
            HISTORY_ID,
            USER_ID,
            USER_NAME,
            RESPONSIBILITIES_OF_OFFICE,
            DEPARTMENT,
            START_YEAR,
            USER_NUMBER,
            TOTAL_ANNUAL,
            USE_ANNUAL,
            START_DATE,
            END_DATE,
            TIME,
            APPLICATION_YEAR,
            REQUEST_DATE,
            HOLIDAY
        FROM
            APPLICATION_HISTORY
        WHERE
        <if test="year != '' and month != ''">
        	START_DATE LIKE CONCAT(#{year}, '-', '%', #{month}, '%')
        </if>
        <if test="year == '' and month == ''">
            START_DATE LIKE CONCAT('%', DATE_FORMAT(NOW(), '%Y-%m'), '%')
        </if>
        AND 
        	APPR_YN2 = 'Y'
        ORDER BY
            HISTORY_ID DESC
    </select>

    <select id="findByHistoryAllCnt" parameterType="String" resultType="int">
        SELECT
            COUNT(*)
        FROM
            APPLICATION_HISTORY
        WHERE
            USER_ID = #{user_id}
    </select>


    <select id="findByHistoryPaging" parameterType="Map" resultType="History">
        SELECT
            HISTORY_ID,
            USER_ID,
            USER_NAME,
            RESPONSIBILITIES_OF_OFFICE,
            DEPARTMENT,
            START_YEAR,
            BIRTHDAY,
            SEX,
            USER_NUMBER,
            TOTAL_ANNUAL,
            USE_ANNUAL,
            START_DATE,
            END_DATE,
            TIME,
            APPLICATION_YEAR,
            REASON,
            APPR_YN,
            APPR_YN2,
            REQUEST_DATE,
            HOLIDAY
        FROM
            APPLICATION_HISTORY
        WHERE
            USER_ID = #{user_id}
        ORDER BY START_DATE DESC
        LIMIT #{pageSize} OFFSET #{startIndex}
    </select>


    <select id="selectCurrentPwd" parameterType="String" resultType="String">
        SELECT
            USER_PW
        FROM
            USER_INFO
        WHERE
            USER_ID = #{user_id}
    </select>

    <update id="updatePwd" parameterType="Map">
        UPDATE
            USER_INFO
        SET
            USER_PW = #{user_pw}
        WHERE
            USER_ID = #{user_id}
    </update>

    <insert id="insertFile" parameterType="UploadFile">
        INSERT INTO FILE_INFO (
            FILE_ID,
            FILE_UUID,
            ORIGIN_FILE_NAME
        ) VALUES (
            (SELECT * FROM (SELECT MAX(HISTORY_ID) FROM APPLICATION_HISTORY) NEXT),
            #{file_uuid},
            #{origin_file_name}
        )
    </insert>
</mapper>