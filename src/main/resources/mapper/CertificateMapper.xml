<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.login.domain.dao.CertificateDAO">
    <insert id="insertCertificate" parameterType="Certificate">
        INSERT INTO ANNUAL.CERTIFICATE_LIST
        (
            DOC_NO,
            TYPE,
            STATUS_CODE,
            USER_ID,
            USER_ADDRESS,
            DEPARTMENT,
            RESPONSIBILITIES_OF_OFFICE,
            USER_NAME,
            IDENTIFICATION_NO_FRONT,
            IDENTIFICATION_NO_BACK,
            START_YEAR,
            PURPOSE,
            NOTE,
            APPLY_DATE
        )
        VALUES
            (
                CONCAT(#{apply_date}, ' - ', LPAD((SELECT nextval('seq_doc_no') FROM DUAL), '3', '0')),
                #{type},
                #{status_code},
                #{user_id},
                #{user_address},
                #{department},
                #{responsibilities_of_office},
                #{user_name},
                #{identification_no_front},
                #{identification_no_back},
                #{start_year},
                #{purpose},
                #{note},
                NOW()
            )
    </insert>

    <select id="selectCertificateAll" parameterType="Map" resultType="Certificate">
        SELECT
            DOC_NO,
            TYPE,
            STATUS_CODE,
            USER_ID,
            USER_ADDRESS,
            DEPARTMENT,
            RESPONSIBILITIES_OF_OFFICE,
            USER_NAME,
            IDENTIFICATION_NO_FRONT,
            IDENTIFICATION_NO_BACK,
            START_YEAR,
            PURPOSE,
            NOTE,
            APPLY_DATE
        FROM
             ANNUAL.CERTIFICATE_LIST
        WHERE
             1=1
        <if test='select_search eq "0"'>
            AND DOC_NO LIKE CONCAT ('%', #{input_search} , '%')
        </if>
        <if test='select_search eq "1"'>
            AND USER_ID LIKE CONCAT('%', #{input_search}, '%')
        </if>
        <if test='select_search eq "2"'>
            AND USER_NAME LIKE CONCAT('%', #{input_search}, '%')
        </if>
        <if test='select_search eq "3"'>
            AND TYPE LIKE CONCAT('%', #{input_search}, '%')
        </if>
        ORDER BY
            APPLY_DATE DESC, USER_ID
        LIMIT
            #{pageSize} OFFSET #{startIndex}
    </select>

    <select id="findByAllCertificateCnt" parameterType="Map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            ANNUAL.CERTIFICATE_LIST
        WHERE
            1=1
        <if test='select_search eq "0"'>
            AND DOC_NO LIKE CONCAT ('%', #{input_search} , '%')
        </if>
        <if test='select_search eq "1"'>
            AND USER_ID LIKE CONCAT('%', #{input_search}, '%')
        </if>
        <if test='select_search eq "2"'>
            AND USER_NAME LIKE CONCAT('%', #{input_search}, '%')
        </if>
        <if test='select_search eq "3"'>
            AND TYPE LIKE CONCAT('%', #{input_search}, '%')
        </if>
    </select>

    <select id="findByDocNoDetail" resultType="Certificate" parameterType="String">
        SELECT
            DOC_NO,
            TYPE,
            STATUS_CODE,
            USER_ID,
            USER_ADDRESS,
            DEPARTMENT,
            RESPONSIBILITIES_OF_OFFICE,
            USER_NAME,
            IDENTIFICATION_NO_FRONT,
            IDENTIFICATION_NO_BACK,
            START_YEAR,
            PURPOSE,
            NOTE,
            APPLY_DATE,
            (
                SELECT
                    EMAIL
                FROM
                    ANNUAL.USER_INFO
                WHERE
                    ANNUAL.USER_INFO.USER_ID = ANNUAL.CERTIFICATE_LIST.USER_ID
            ) AS EMAIL
        FROM
            ANNUAL.CERTIFICATE_LIST
        WHERE
            DOC_NO = #{doc_no}
    </select>

    <update id="approveCertificate" parameterType="String">
        UPDATE
            ANNUAL.CERTIFICATE_LIST
        SET
            STATUS_CODE = '1'
        WHERE
            DOC_NO = #{doc_no}
    </update>

    <delete id="deleteCertificate" parameterType="String">
        DELETE FROM
            ANNUAL.CERTIFICATE_LIST
        WHERE
            DOC_NO = #{doc_no}
    </delete>

    <update id="updateSocialNumber" parameterType="Certificate">
        UPDATE
            ANNUAL.CERTIFICATE_LIST
        SET
            IDENTIFICATION_NO_BACK = #{identification_no_back}
        WHERE
            DOC_NO = #{doc_no}
    </update>

    <insert id="insertCertificateCareer" parameterType="Certificate">
        INSERT INTO ANNUAL.CERTIFICATE_LIST
        (
            DOC_NO,
            TYPE,
            STATUS_CODE,
            USER_ID,
            USER_ADDRESS,
            DEPARTMENT,
            RESPONSIBILITIES_OF_OFFICE,
            USER_NAME,
            PURPOSE,
            NOTE,
            APPLY_DATE
        )
        VALUES
            (
                CONCAT(#{apply_date}, ' - ', LPAD((SELECT nextval('seq_doc_no') FROM DUAL), '3', '0')),
                #{type},
                #{status_code},
                CONCAT('tmp', (SELECT DATE_FORMAT(NOW(), '%d')), LPAD((SELECT nextval('seq_tmp_user_id') FROM DUAL), '3', '0')),
                #{user_address},
                #{department},
                #{responsibilities_of_office},
                #{user_name},
                #{purpose},
                #{note},
                NOW()
            )
    </insert>

    <select id="getRecentDocNo" resultType="String">
        SELECT
            DOC_NO
        FROM
            ANNUAL.CERTIFICATE_LIST
        ORDER BY
            DOC_NO
        DESC
            LIMIT 1
    </select>

    <insert id="insertCertificateEn" parameterType="Certificate">
        INSERT INTO ANNUAL.CERTIFICATE_LIST
        (
            DOC_NO,
            TYPE,
            STATUS_CODE,
            USER_ID,
            USER_ADDRESS,
            DEPARTMENT,
            RESPONSIBILITIES_OF_OFFICE,
            USER_NAME,
            PURPOSE,
            NOTE,
            APPLY_DATE
        )
        VALUES
            (
                CONCAT(#{apply_date}, ' - ', LPAD((SELECT nextval('seq_doc_no') FROM DUAL), '3', '0')),
                #{type},
                #{status_code},
                CONCAT('tmp', (SELECT DATE_FORMAT(NOW(), '%d')), LPAD((SELECT nextval('seq_tmp_user_id') FROM DUAL), '3', '0')),
                #{user_address},
                #{department},
                #{responsibilities_of_office},
                #{user_name},
                #{purpose},
                #{note},
                NOW()
            )
    </insert>
</mapper>